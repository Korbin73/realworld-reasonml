// Generated by BUCKLESCRIPT VERSION 1.8.2, PLEASE EDIT WITH CARE
'use strict';

var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var React       = require("react");
var Js_dict     = require("bs-platform/lib/js/js_dict.js");
var Bs_fetch    = require("bs-fetch/lib/js/src/bs_fetch.js");
var ReasonReact = require("reason-react/lib/js/src/reasonReact.js");

var component = ReasonReact.reducerComponent("Register");

function show(prim) {
  return prim;
}

function register() {
  return /* Register */1;
}

function login() {
  return /* Login */0;
}

var hideMessage = {
  display: "none"
};

function updateName($$event) {
  return /* NameUpdate */Block.__(0, [$$event.target.value]);
}

function updateEmail($$event) {
  return /* EmailUpdate */Block.__(1, [$$event.target.value]);
}

function updatePassword($$event) {
  return /* PasswordUpdate */Block.__(2, [$$event.target.value]);
}

function make_headers(token) {
  var content_type = /* tuple */[
    "content-type",
    "application/json"
  ];
  if (token) {
    return /* array */[
            content_type,
            /* tuple */[
              "authorization",
              "Token " + token[0]
            ]
          ];
  } else {
    return /* array */[content_type];
  }
}

function make_init(method_, token, data) {
  var func = Bs_fetch.RequestInit[/* make */0];
  var default_init = function (param, param$1, param$2) {
    return Curry._6(func, /* Some */[method_], /* Some */[make_headers(token)], param, param$1, param$2, /* Some */[/* CORS */3]);
  };
  if (data) {
    return Curry._6(default_init(/* Some */[JSON.stringify(data[0])], /* None */0, /* None */0), /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0);
  } else {
    return Curry._6(default_init(/* None */0, /* None */0, /* None */0), /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* () */0);
  }
}

var toJson = Js_dict.fromList;

function loginUser() {
  console.log("Before parsing the jason");
  var data = JSON.parse("{\"user\": {\"email\":credentials.email, \"password\":credentials.password}}");
  console.log(data);
  var request = make_init(/* Post */2, /* None */0, /* Some */[data]);
  fetch("127.0.0.1:7629/users/login", request).then((function (prim) {
            return prim.text();
          })).then((function (text) {
          return Promise.resolve((console.log(text), /* () */0));
        }));
  return /* () */0;
}

function make() {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (param) {
      var state = param[/* state */4];
      var reduce = param[/* reduce */3];
      return React.createElement("div", {
                  className: "auth-page"
                }, React.createElement("div", {
                      className: "container page"
                    }, React.createElement("div", {
                          className: "row"
                        }, React.createElement("div", {
                              className: "col-md-6 offset-md-3 col-xs-12"
                            }, React.createElement("h1", {
                                  className: "text-xs-center"
                                }, "Sign up"), React.createElement("p", {
                                  className: "text-xs-center"
                                }, React.createElement("a", {
                                      href: ""
                                    }, "Have an account?")), React.createElement("ul", {
                                  className: "error-messages",
                                  style: hideMessage
                                }, React.createElement("li", undefined, "That email is already taken")), React.createElement("form", undefined, React.createElement("fieldset", {
                                      className: "form-group"
                                    }, React.createElement("input", {
                                          className: "form-control form-control-lg",
                                          placeholder: "Your Name",
                                          type: "text",
                                          value: state[/* name */0],
                                          onChange: Curry._1(reduce, updateName)
                                        })), React.createElement("fieldset", {
                                      className: "form-group"
                                    }, React.createElement("input", {
                                          className: "form-control form-control-lg",
                                          placeholder: "Email",
                                          type: "text",
                                          value: state[/* email */1],
                                          onChange: Curry._1(reduce, updateEmail)
                                        })), React.createElement("fieldset", {
                                      className: "form-group"
                                    }, React.createElement("input", {
                                          className: "form-control form-control-lg",
                                          placeholder: "Password",
                                          type: "password",
                                          value: state[/* password */2],
                                          onChange: Curry._1(reduce, updatePassword)
                                        })), React.createElement("button", {
                                      className: "btn btn-lg btn-primary pull-xs-right",
                                      onClick: Curry._1(reduce, register)
                                    }, "Sign up"))))));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* name */"",
              /* email */"",
              /* password */""
            ];
    });
  newrecord[/* reducer */12] = (function (action, state) {
      if (typeof action === "number") {
        if (action) {
          return /* SideEffects */Block.__(2, [(function () {
                        return loginUser(state);
                      })]);
        } else {
          return /* NoUpdate */0;
        }
      } else {
        switch (action.tag | 0) {
          case 0 : 
              return /* Update */Block.__(0, [/* record */[
                          /* name */action[0],
                          /* email */state[/* email */1],
                          /* password */state[/* password */2]
                        ]]);
          case 1 : 
              return /* Update */Block.__(0, [/* record */[
                          /* name */state[/* name */0],
                          /* email */action[0],
                          /* password */state[/* password */2]
                        ]]);
          case 2 : 
              return /* Update */Block.__(0, [/* record */[
                          /* name */state[/* name */0],
                          /* email */state[/* email */1],
                          /* password */action[0]
                        ]]);
          
        }
      }
    });
  return newrecord;
}

exports.component      = component;
exports.show           = show;
exports.register       = register;
exports.login          = login;
exports.hideMessage    = hideMessage;
exports.updateName     = updateName;
exports.updateEmail    = updateEmail;
exports.updatePassword = updatePassword;
exports.make_headers   = make_headers;
exports.make_init      = make_init;
exports.toJson         = toJson;
exports.loginUser      = loginUser;
exports.make           = make;
/* component Not a pure module */
